<!DOCTYPE html>
<!doctype html>
<html lang="en">

<head>
    <title>cmuxser配置</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css"
        integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.4.1/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js"
        integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/js/bootstrap.min.js"
        integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6"
        crossorigin="anonymous"></script>
    <style>
        .error {
            color: red;
            font-size: 12px;
        }

        .title {
            text-align: center;
            margin: 20px 0;
        }

        h3 {
            margin: 40px 0 20px;
        }
    </style>
</head>

<body>
    <div class="container">
        <h2 class="title">node-server配置</h2>
        <form class="needs-validation" novalidate action="#">
            <div class="container">
                <h3>centry配置</h3>
                <div class="row">
                    <div class="form-group col">
                        <label for="Name">用户邮箱</label>
                        <input type="text" class="form-control" value="chenyuanguang@cmcm.com" id="gitlabName"
                            name="gitlabName">
                    </div>
                    <div class="form-group col">
                        <label for="gitlabPassword"">密码</label>
                        <input type=" text" class="form-control" value="123456" id="gitlabPassword"
                            name="gitlabPassword">
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col">
                        <label for="gitlabUrl">gitlab地址(域名即可)</label>
                        <input type="text" class="form-control" value="gitlab.liebaopay.com" id="gitlabUrl"
                            name="gitlabUrl">
                    </div>
                    <div class="form-group col">
                        <label for="chromeUrl">chrome安装地址</label>
                        <input type="text" class="form-control"
                            value="/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome" id="chromeUrl"
                            name="chromeUrl">
                    </div>
                </div>
            </div>

            <button type="button" class="btn btn-primary" id="pre">上一步</button>
            <button type="submit" class="btn btn-primary" id="create">创建</button>
        </form>
        <div class="modal fade" id="exampleModalCenter" data-backdrop="static" tabindex="-1" role="dialog"
            aria-labelledby="exampleModalCenterTitle">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-body" style="display: flex;justify-content: center;align-items: center;">
                        <div class="spinner-border text-primary" role="status">
                            <span class="sr-only"></span>
                        </div>
                        <div>
                            创建项目中,耐心等待...
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
    <script src="/js/jquery.validate.min.js"></script>
    <script src="/js/addMethod.js"></script>
    <script>
        $(() => {
            $.extend({
                //将序列化的参数转换为对象
                serializeToObj(str) {
                    var obj = {}
                    str.split("&").map((i) => {
                        var itemarr = i.split("=")
                        obj[itemarr[0]] = itemarr[1]
                    })
                    return obj
                }
            })
            $(".needs-validation").validate({
                rules: {
                    projectName: {
                        required: true
                    },
                    author: {
                        required: true
                    },
                    description: {
                        required: true
                    },
                    email: {
                        required: true
                    },
                    templateType: {
                        required: true
                    },
                    host: {
                        required: true
                    },
                    port: {
                        required: true
                    }
                },
                messages: {
                    projectName: { required: "项目名不能为空" },
                    author: { required: "作者不能为空" },
                    description: { required: "描述不能为空" },
                    email: { required: "邮箱不能为空" },
                    templateType: { required: "请选择模板" },
                    host: { equalTo: "请输入主机号" },
                    port: { equalTo: "请输入端口号" }
                },
                submitHandler: function (form, event) {
                    event.preventDefault()
                    //验证通过后进行注册
                    register();
                }
            });
            function register() {
                let params = $.serializeToObj($(".needs-validation").serialize())
                console.log(params)
                let data = {
                    centryConfig: params,
                    baseConfig: sessionStorage.getItem("baseConfig") && JSON.parse(sessionStorage.getItem("baseConfig")),
                    gitlabConfig: sessionStorage.getItem("gitlabConfig") && JSON.parse(sessionStorage.getItem("gitlabConfig")),
                }
                $("#exampleModalCenter").modal("show")
                $.ajax({
                    url: "/sendConfig",
                    type: "post",
                    data: data
                }).then((data) => {
                    console.log(data)
                })
                loop()

            }
            $("#pre").click(() => {
                window.location.replace("/view/gitlab")
            })

            function loop() {
                const time = setInterval(() => {
                    $.ajax({
                        url: "/getCreateStatus",
                        type: "get",
                    }).then((data) => {
                        console.log(data)
                        data=data.data
                        if (data.status == 1) {
                            clearInterval(time)
                            $("#exampleModalCenter .modal-body").html("创建成功即将关闭页面")
                            setTimeout(() => {
                                window.close()
                            }, 2000);
                        } else if (data.status == 2) {
                            clearInterval(time)
                            $("#exampleModalCenter .modal-body").html("创建失败")
                            setTimeout(() => {
                                window.location.reload()
                            }, 2000);
                           
                        }else if (data.status == 3) {
                            clearInterval(time)
                            $("#exampleModalCenter .modal-body").html("gitlab项目已经存在,重新命名项目名称")
                            setTimeout(() => {
                                window.location.replace("/view/index")
                            }, 2000);
                            
                        }
                    }).catch((err) => {
                        $("#exampleModalCenter .modal-body").html("创建成功即将关闭页面")
                        setTimeout(() => {
                            window.close()
                        }, 2000);
                    })
                }, 1000);

                return () => {
                    clearInterval(time)
                }
            }


        })

    </script>
</body>

</html>